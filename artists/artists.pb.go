// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: artists/artists.proto

package artists

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ArtistInfoReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Artist        string                 `protobuf:"bytes,1,opt,name=artist,proto3" json:"artist,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArtistInfoReq) Reset() {
	*x = ArtistInfoReq{}
	mi := &file_artists_artists_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtistInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistInfoReq) ProtoMessage() {}

func (x *ArtistInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_artists_artists_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistInfoReq.ProtoReflect.Descriptor instead.
func (*ArtistInfoReq) Descriptor() ([]byte, []int) {
	return file_artists_artists_proto_rawDescGZIP(), []int{0}
}

func (x *ArtistInfoReq) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

type ArtistSearchReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Artist        string                 `protobuf:"bytes,1,opt,name=artist,proto3" json:"artist,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArtistSearchReq) Reset() {
	*x = ArtistSearchReq{}
	mi := &file_artists_artists_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtistSearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistSearchReq) ProtoMessage() {}

func (x *ArtistSearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_artists_artists_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistSearchReq.ProtoReflect.Descriptor instead.
func (*ArtistSearchReq) Descriptor() ([]byte, []int) {
	return file_artists_artists_proto_rawDescGZIP(), []int{1}
}

func (x *ArtistSearchReq) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *ArtistSearchReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ArtistSearchReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type ArtistInfoRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Listeners     int32                  `protobuf:"varint,2,opt,name=listeners,proto3" json:"listeners,omitempty"`
	Playcounts    int32                  `protobuf:"varint,3,opt,name=playcounts,proto3" json:"playcounts,omitempty"`
	Genres        []string               `protobuf:"bytes,4,rep,name=genres,proto3" json:"genres,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArtistInfoRes) Reset() {
	*x = ArtistInfoRes{}
	mi := &file_artists_artists_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtistInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistInfoRes) ProtoMessage() {}

func (x *ArtistInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_artists_artists_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistInfoRes.ProtoReflect.Descriptor instead.
func (*ArtistInfoRes) Descriptor() ([]byte, []int) {
	return file_artists_artists_proto_rawDescGZIP(), []int{2}
}

func (x *ArtistInfoRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ArtistInfoRes) GetListeners() int32 {
	if x != nil {
		return x.Listeners
	}
	return 0
}

func (x *ArtistInfoRes) GetPlaycounts() int32 {
	if x != nil {
		return x.Playcounts
	}
	return 0
}

func (x *ArtistInfoRes) GetGenres() []string {
	if x != nil {
		return x.Genres
	}
	return nil
}

type ArtistSearchRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Artists       []*ArtistSearch        `protobuf:"bytes,1,rep,name=artists,proto3" json:"artists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArtistSearchRes) Reset() {
	*x = ArtistSearchRes{}
	mi := &file_artists_artists_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtistSearchRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistSearchRes) ProtoMessage() {}

func (x *ArtistSearchRes) ProtoReflect() protoreflect.Message {
	mi := &file_artists_artists_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistSearchRes.ProtoReflect.Descriptor instead.
func (*ArtistSearchRes) Descriptor() ([]byte, []int) {
	return file_artists_artists_proto_rawDescGZIP(), []int{3}
}

func (x *ArtistSearchRes) GetArtists() []*ArtistSearch {
	if x != nil {
		return x.Artists
	}
	return nil
}

type ArtistSearch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Listeners     int32                  `protobuf:"varint,2,opt,name=listeners,proto3" json:"listeners,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArtistSearch) Reset() {
	*x = ArtistSearch{}
	mi := &file_artists_artists_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtistSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistSearch) ProtoMessage() {}

func (x *ArtistSearch) ProtoReflect() protoreflect.Message {
	mi := &file_artists_artists_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistSearch.ProtoReflect.Descriptor instead.
func (*ArtistSearch) Descriptor() ([]byte, []int) {
	return file_artists_artists_proto_rawDescGZIP(), []int{4}
}

func (x *ArtistSearch) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ArtistSearch) GetListeners() int32 {
	if x != nil {
		return x.Listeners
	}
	return 0
}

var File_artists_artists_proto protoreflect.FileDescriptor

var file_artists_artists_proto_rawDesc = string([]byte{
	0x0a, 0x15, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x27,
	0x0a, 0x0d, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x22, 0x53, 0x0a, 0x0f, 0x41, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x79, 0x0a, 0x0d,
	0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x22, 0x40, 0x0a, 0x0f, 0x41, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x07, 0x61, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x22, 0x40, 0x0a, 0x0c, 0x41, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x73, 0x32, 0x8a, 0x01, 0x0a, 0x0e,
	0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38,
	0x0a, 0x0a, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x41, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x42, 0x17, 0x5a, 0x15, 0x6c, 0x61, 0x73, 0x74,
	0x66, 0x6d, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_artists_artists_proto_rawDescOnce sync.Once
	file_artists_artists_proto_rawDescData []byte
)

func file_artists_artists_proto_rawDescGZIP() []byte {
	file_artists_artists_proto_rawDescOnce.Do(func() {
		file_artists_artists_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_artists_artists_proto_rawDesc), len(file_artists_artists_proto_rawDesc)))
	})
	return file_artists_artists_proto_rawDescData
}

var file_artists_artists_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_artists_artists_proto_goTypes = []any{
	(*ArtistInfoReq)(nil),   // 0: proto.ArtistInfoReq
	(*ArtistSearchReq)(nil), // 1: proto.ArtistSearchReq
	(*ArtistInfoRes)(nil),   // 2: proto.ArtistInfoRes
	(*ArtistSearchRes)(nil), // 3: proto.ArtistSearchRes
	(*ArtistSearch)(nil),    // 4: proto.ArtistSearch
}
var file_artists_artists_proto_depIdxs = []int32{
	4, // 0: proto.ArtistSearchRes.artists:type_name -> proto.ArtistSearch
	0, // 1: proto.ArtistsService.ArtistInfo:input_type -> proto.ArtistInfoReq
	1, // 2: proto.ArtistsService.ArtistSearch:input_type -> proto.ArtistSearchReq
	2, // 3: proto.ArtistsService.ArtistInfo:output_type -> proto.ArtistInfoRes
	3, // 4: proto.ArtistsService.ArtistSearch:output_type -> proto.ArtistSearchRes
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_artists_artists_proto_init() }
func file_artists_artists_proto_init() {
	if File_artists_artists_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_artists_artists_proto_rawDesc), len(file_artists_artists_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_artists_artists_proto_goTypes,
		DependencyIndexes: file_artists_artists_proto_depIdxs,
		MessageInfos:      file_artists_artists_proto_msgTypes,
	}.Build()
	File_artists_artists_proto = out.File
	file_artists_artists_proto_goTypes = nil
	file_artists_artists_proto_depIdxs = nil
}
